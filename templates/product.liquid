<div class="product-page clearfix">
  <div class="product-images left">
    <div class="product-featured-image">
      <a href="{{ product.featured_image.src | product_img_url: '1024x1024' }}">
        <img src="{{ product.featured_image.src | product_img_url : 'grande' }}" alt="{{ product.featured_image.alt | escape }}">
      </a>
    </div>
    <div class="product-img-list clearfix">
      {% for image in product.images | offset:1 %}
        <div class="product-img left {% cycle '', '', 'last' %}">
          <a href="{{ image.src | product_img_url: '1024x1024' }}">
            <img src="{{ image.src | product_img_url: 'small' }}" alt="{{ image.alt | escape }}">
          </a>
        </div>
      {% endfor %}
    </div>
  </div>
  <div class="product-details left">
    <h2 class="product-header">{{ product.title }}</h2>
    <div class="product-desc rte">{{ product.description }}</div>
    <div class="price-field"></div>
    <form action="/cart/add" method="post" class="product-form">
      <div class="product-variants">
        <select id="product-select" name="id">
          {% for variant in product.variants %}
          <option value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
          {% endfor %}
        </select>
      </div>
      <input type="submit" name="add" value="Purchase" class="btn" id="purchase" />
    </form>
    {% if collection %}
      <div class="product-nav clearfix">
        {% if collection.previous_product %}
          <div class="left">{{ '&larr; Previous Product' | link_to: collection.previous_product }}</div>
        {% endif %}
        {% if collection.next_product %}
          <div class="right">{{ 'Next Product &rarr;' | link_to: collection.next_product }}</div>
        {% endif %}
      </div>
    {% endif %}
  </div>
</div>

<script>
  // <![CDATA[
  var selectCallback = function(variant, selector) {
    console.log(variant);
    if (variant && variant.available == true) {
      // selected a valid variant
      $('#purchase').removeClass('disabled').removeAttr('disabled'); // remove unavailable class from add-to-cart button, and re-enable button
      $('.price-field').html(Shopify.formatMoney(variant.price, "{{shop.money_with_currency_format}}"));  // update price field
    } else {
      // variant doesn't exist
      $('#purchase').addClass('disabled').attr('disabled', 'disabled');      // set add-to-cart button to unavailable class and disable button
      var message = variant ? "Sold Out" : "Unavailable";
      $('.price-field').text(message); // update price-field message
    }
  }
  // initialize multi selector for product
  $(function($) {
    new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback });
  $('.selector-wrapper').addClass('clearfix');
    {% if product.options.size == 1 %}
      $('.selector-wrapper').prepend("<label for='product-select-option-0'>{{ product.options.first }}</label>");
    {% endif %}
  });
  // ]]>
</script>
